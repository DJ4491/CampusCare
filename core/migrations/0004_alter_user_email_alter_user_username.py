# Generated by Django 5.2.6 on 2025-09-28 08:49

import django.contrib.auth.validators
from django.db import migrations, models


def ensure_unique_emails(apps, schema_editor):
    User = apps.get_model('core', 'User')
    seen = set()
    # Preload existing emails and normalize empties
    for user in User.objects.all().order_by('id'):
        email = (user.email or '').strip().lower()
        if not email:
            email = f'user{user.id}@placeholder.local'
        # Deduplicate if needed
        original = email
        counter = 1
        while email in seen:
            local, _, domain = original.partition('@')
            email = f"{local}+{counter}@{domain or 'placeholder.local'}"
            counter += 1
        if email != (user.email or '').strip().lower():
            user.email = email
            user.save(update_fields=['email'])
        seen.add(email)


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_alter_report_author_alter_report_image'),
    ]

    operations = [
        migrations.RunPython(ensure_unique_emails, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()]),
        ),
    ]
